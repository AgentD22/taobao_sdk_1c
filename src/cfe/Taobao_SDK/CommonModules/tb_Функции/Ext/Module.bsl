
#Область ПрограммныйИнтерфейс

// Получение информации по заказу
// Параметры:
//  ИдентификаторЗаказа - Строка
//  Настройкаобмена - Структура, см. tb_Транспорт.ПолучитьСтруктуруНастройкиОбмена()
//  Отказ - Булево 
Функция ПолучениеИнформацииПоЗаказу(ИдентификаторЗаказа, Настройкаобмена, Отказ) Экспорт
	
	ТаблицаПараметров = tb_Транспорт.ПолучитьТаблицуПараметров(НастройкаОбмена);
		
	tb_Транспорт.ДобавитьСтрокуТаблицаПараметров(ТаблицаПараметров, "method", "aliexpress.solution.order.info.get");
	tb_Транспорт.ДобавитьСтрокуТаблицаПараметров(ТаблицаПараметров, "param1", ПолучитьПараметрыЗапросаПолучениеПоИдентификатору(ИдентификаторЗаказа));
	
	Возврат tb_Транспорт.ЗапросКСервису(ТаблицаПараметров, Настройкаобмена, Отказ);
	
КонецФункции

// Обновление остатков по списку номенклатуры и её торговым предложениям
// Документация https://developers.aliexpress.com/en/doc.htm?docId=45140&docType=2
// Параметры:
//  МассивОстатков - массив структур, см. НомализоватьМассивОстатков() 
//  Настройкаобмена - Структура, см. tb_Транспорт.ПолучитьСтруктуруНастройкиОбмена()
//  Отказ - Булево 
Функция ОбновитьОстатки(МассивОстатков, НастройкаОбмена, Отказ) Экспорт
	
	ТаблицаПараметров = tb_Транспорт.ПолучитьТаблицуПараметров(НастройкаОбмена);
	tb_Транспорт.ДобавитьСтрокуТаблицаПараметров(ТаблицаПараметров, "method", "aliexpress.solution.batch.product.inventory.update");
	
	МассивДанные = НомализоватьМассивОстатков(МассивОстатков);
	СтрокаОбновлениеОстатков = tb_КоннекторHTTP.ОбъектВJson(МассивДанные);
	tb_Транспорт.ДобавитьСтрокуТаблицаПараметров(ТаблицаПараметров, "mutiple_product_update_list", СтрокаОбновлениеОстатков);
	
	Возврат tb_Транспорт.ЗапросКСервису(ТаблицаПараметров, Настройкаобмена, Отказ);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Максимальное количество элементов в массиве 20
// Параметры:
//  МассивОстатков - МассивСтруктур
//    Структура, параметры:
//      ИдентификаторНоменклатуры - строка
//      Количество - число
//      КодНоменклатуры (торгового предложения) - строка
Функция НомализоватьМассивОстатков(МассивОстатков)
	
	МассивДанные = Новый Массив;
	
	Для Каждого СтрокаОстаток Из МассивОстатков Цикл
		
		СтруктураОстаток = Новый Структура;
		СтруктураОстаток.Вставить("product_id", СтрокаОстаток.ИдентификаторНоменклатуры);
		
		МассивДанныеОстатки = Новый Массив;
		
		СтруктураОстатокПредложения = Новый Структура;
		СтруктураОстатокПредложения.Вставить("inventory", СтрокаОстаток.Количество);
		СтруктураОстатокПредложения.Вставить("sku_code", СокрЛП(СтрокаОстаток.КодНоменклатуры));
		
		МассивДанныеОстатки.Добавить(СтруктураОстатокПредложения);
		
		СтруктураОстаток.Вставить("multiple_sku_update_list", МассивДанныеОстатки); 
		
		МассивДанныеОстатки.Добавить(СтруктураОстаток);
		
	КонецЦикла;
	
	Возврат МассивДанные;
	
КонецФункции


Функция ПолучитьПараметрыЗапросаПолучениеПоИдентификатору(ИдентификаторЗаказа)
	
	СтруктураДанные = Новый Структура;
	СтруктураДанные.Вставить("ext_info_bit_flag", "");
	СтруктураДанные.Вставить("order_id", ИдентификаторЗаказа);
	
	Возврат tb_РаботаСоСтроками.В_JSON_СимволыВнеASCII(СтруктураДанные);
	
КонецФункции

// Разбирает соответствие ответ от сервиса, провеяет на успешность выполнения
// Параметры:
//  Ответ - Соответствие
//  СтрокаЗаголовокОтвет - Строка
Функция РезобратьРезультатОтвета_1(Ответ, СтрокаЗаголовокОтвет)
	
	РезультатУспешен = ПустаяСтрока(Ответ
	.Получить(СтрокаЗаголовокОтвет)
	.Получить("error_info"));
	
	ОписаниеОшибки = tb_РаботаСоСтроками.В_JSON(Ответ
	.Получить(СтрокаЗаголовокОтвет)
	.Получить("error_info"));
	
	Если Не РезультатУспешен Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "" + ОписаниеОшибки;
		Сообщение.Сообщить();
		
		Отказ = Истина;
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат Ответ
	.Получить(СтрокаЗаголовокОтвет)
	.Получить("result");
	
КонецФункции

// Разбирает соответствие ответ от сервиса, провеяет на успешность выполнения
// Параметры:
//  Ответ - Соответствие
//  СтрокаЗаголовокОтвет - Строка
Функция РезобратьРезультатОтвета_2(Ответ, СтрокаЗаголовокОтвет)
	
	РезультатУспешен = ПустаяСтрока(Ответ
	.Получить(СтрокаЗаголовокОтвет)
	.Получить("result")
	.Получить("error_info"));
	
	ОписаниеОшибки = tb_РаботаСоСтроками.В_JSON(Ответ
	.Получить(СтрокаЗаголовокОтвет)
	.Получить("result")
	.Получить("error_info"));
	
	Если Не РезультатУспешен Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "" + ОписаниеОшибки;
		Сообщение.Сообщить();
		
		Отказ = Истина;
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат Ответ
	.Получить(СтрокаЗаголовокОтвет)
	.Получить("result")
	.Получить("result");
	
КонецФункции

#КонецОбласти