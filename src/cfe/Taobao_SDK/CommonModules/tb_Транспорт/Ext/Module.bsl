
Функция ЗапросКСервису(ТаблицаПараметров, НастройкаОбмена, Отказ = Ложь) Экспорт
	
	ДобавитьПодпись(ТаблицаПараметров, НастройкаОбмена);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Заголовки", Новый Соответствие);
	
	ДополнительныеПараметры.Заголовки.Вставить("Content-Type", "application/x-www-form-urlencoded");
	//ДополнительныеПараметры.Заголовки.Вставить("content-encoding", "gzip");
	
	Ответ = tb_КоннекторHTTP.Post(
		ПолучитьБазовыйАдресСервиса(), 
		ПолучитьСоответствиеДанные(ТаблицаПараметров), 
		ДополнительныеПараметры
		);
		
	Если Ответ.КодСостояния <> 200 Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Ошибка запроса, КодСостояния " + Ответ.КодСостояния;
		Сообщение.Сообщить();
		
		Отказ = Истина;
		Возврат Неопределено;
		
	КонецЕсли;		
	
	ПараметрыПреобразованияJSON = Новый Структура;
	ПараметрыПреобразованияJSON.Вставить("ПрочитатьВСоответствие", Истина);
	
	Попытка
		СоответствиеДанные = tb_КоннекторHTTP.КакJson(Ответ, ПараметрыПреобразованияJSON);
	Исключение
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Ошибка чтения " + tb_КоннекторHTTP.КакТекст(Ответ);
		Сообщение.Сообщить();
		
		Отказ = Истина;
		Возврат Неопределено;

	КонецПопытки;
	
	Если ЭтоОтветОшибки(СоответствиеДанные) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Ошибка в ответе";
		Сообщение.Сообщить();
		
		Отказ = Истина;
		Возврат Неопределено;

	КонецЕсли;
	
	Возврат СоответствиеДанные;
	
КонецФункции

Функция ПолучитьБазовыйАдресСервиса()
	
	Возврат "https://eco.taobao.com/router/rest";
	
КонецФункции

Функция ЭтоОтветОшибки(СоответствиеОтвет) Экспорт
	
	ЭтоОшибка = Истина;
	
	СтрокаОшибка = СоответствиеОтвет.Получить("error_response");
	
	Если ПустаяСтрока(СтрокаОшибка) Тогда
		ЭтоОшибка = Ложь;
		
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "" + tb_РаботаСоСтроками.В_JSON(СтрокаОшибка);
		Сообщение.Сообщить();
	КонецЕсли;
	
	Возврат ЭтоОшибка;
	
КонецФункции


//Вычислить MD5 Хеш списка параметров
Процедура ДобавитьПодпись(ТаблицаПараметров, НастройкаОбмена)
	
	СтрокаХеш = ПолучитьХешТаблицыПараметров(ТаблицаПараметров, НастройкаОбмена);
	ДобавитьСтрокуТаблицаПараметров(ТаблицаПараметров, "sign", СтрокаХеш);  
	
КонецПроцедуры

Функция ПолучитьХешТаблицыПараметров(ТаблицаПараметров, НастройкаОбмена) Экспорт
	
	// требование из документации
	ТаблицаПараметров.Сортировать("Ключ");
	
	СтрокаДанные = НастройкаОбмена.СекретПриложения;  
	
	Для каждого СтрТ Из ТаблицаПараметров Цикл
		
		СтрокаДанные = СтрокаДанные + СтрТ.Ключ + СтрТ.Значение;
		
	КонецЦикла;
	
	СтрокаДанные = СтрокаДанные + НастройкаОбмена.СекретПриложения;
	
	Возврат MD5ХешСтрока(СтрокаДанные);
	
КонецФункции

Функция MD5ХешСтрока(Знач СтрокаДанные)
	
	Хеш = Новый ХешированиеДанных(ХешФункция.MD5);
	Хеш.Добавить(СтрокаДанные);
	
	ХешСумма = Строка(Хеш.ХешСумма);
	
	ХешСумма = СтрЗаменить(ХешСумма, " ", "");
	
	Возврат ХешСумма; 
	
КонецФункции

Функция ПолучитьСоответствиеДанные(ТаблицаПараметров)
	
	СтрокаДанные = "";
	
	Для Каждого СтрТ Из ТаблицаПараметров Цикл
		СтрокаДанные = СтрокаДанные + СтрТ.Ключ + "=" + СтрТ.Значение + "&";
	КонецЦикла;
	
	Возврат СтрокаДанные;
	
	//СоответствиеДанные = Новый Соответствие;
	//
	//Для Каждого СтрТ Из ТаблицаПараметров Цикл
	//	
	//	СоответствиеДанные.Вставить(СтрТ.Ключ, СтрТ.Значение);
	//	
	//КонецЦикла;
	//
	//Возврат СоответствиеДанные;
	
КонецФункции


// Получение стандартных параметров запроса
//
// Параметры:
//   НастройкаОбмена - Структура, см. ПолучитьСтруктуруНастройкиОбмена 
Функция ПолучитьТаблицуПараметров(НастройкаОбмена) Экспорт
	
	ТаблицаПараметров = Новый ТаблицаЗначений;
	ТаблицаПараметров.Колонки.Добавить("Ключ");
	ТаблицаПараметров.Колонки.Добавить("Значение");
	
	ДобавитьСтрокуТаблицаПараметров(ТаблицаПараметров, "app_key", НастройкаОбмена.КлючПриложения);    //
	ДобавитьСтрокуТаблицаПараметров(ТаблицаПараметров, "format", "json");
	//ДобавитьСтрокуТаблицаПараметров(ТаблицаПараметров, "partner_id", "apidoc");
	ДобавитьСтрокуТаблицаПараметров(ТаблицаПараметров, "session", НастройкаОбмена.КлючСессии);  //
	ДобавитьСтрокуТаблицаПараметров(ТаблицаПараметров, "sign_method", "md5");
	
	// UTC+8
	ДобавитьСтрокуТаблицаПараметров(ТаблицаПараметров, "timestamp", Формат(УниверсальноеВремя(ТекущаяДата()) + 8*60*60, "ДФ='гггг-ММ-дд ЧЧ:мм:сс'"));
	
	ДобавитьСтрокуТаблицаПараметров(ТаблицаПараметров, "v", "2.0");
	
	Возврат ТаблицаПараметров;
	
КонецФункции

Процедура ДобавитьСтрокуТаблицаПараметров(ТаблицаПараметров, Ключ, Значение) Экспорт
	
	СтрП = ТаблицаПараметров.Добавить();
	СтрП.Ключ = Ключ;
	СтрП.Значение = Формат(Значение, "ЧН=; ЧГ=0");
	
КонецПроцедуры


// Создает структуру по умолчанию
Функция ПолучитьСтруктуруНастройкиОбмена() Экспорт
	
	НастройкиОбмена = Новый Структура;
	НастройкиОбмена.Вставить("КлючСессии", ""); //Token
	НастройкиОбмена.Вставить("КлючПриложения", ""); //AppKey
	НастройкиОбмена.Вставить("СекретПриложения", ""); //SecretApp
	
	Возврат НастройкиОбмена;
	
КонецФункции




